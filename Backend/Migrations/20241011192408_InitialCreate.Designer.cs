// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241011192408_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Backend.Models.Bpkb", b =>
                {
                    b.Property<string>("AgreementNumber")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("agreement_number");

                    b.Property<DateTime?>("BpkbDate")
                        .HasColumnType("datetime")
                        .HasColumnName("bpkb_date");

                    b.Property<DateTime?>("BpkbDateIn")
                        .HasColumnType("datetime")
                        .HasColumnName("bpkb_date_in");

                    b.Property<string>("BpkbNo")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("bpkb_no");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("branch_id");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<DateTime?>("FakturDate")
                        .HasColumnType("datetime")
                        .HasColumnName("faktur_date");

                    b.Property<string>("FakturNo")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("faktur_no");

                    b.Property<string>("LastUpdatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("last_updated_by");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("last_updated_on");

                    b.Property<string>("LocationId")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("location_id");

                    b.Property<string>("PoliceNo")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("police_no");

                    b.HasKey("AgreementNumber");

                    b.HasIndex("LocationId");

                    b.ToTable("tr_bpkb");
                });

            modelBuilder.Entity("Backend.Models.StorageLocation", b =>
                {
                    b.Property<string>("LocationId")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("location_id");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("location_name");

                    b.HasKey("LocationId");

                    b.ToTable("ms_storage_location");
                });

            modelBuilder.Entity("Backend.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("user_name");

                    b.HasKey("UserId");

                    b.ToTable("ms_user");
                });

            modelBuilder.Entity("Backend.Models.Bpkb", b =>
                {
                    b.HasOne("Backend.Models.StorageLocation", "MsStorageLocation")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MsStorageLocation");
                });
#pragma warning restore 612, 618
        }
    }
}
